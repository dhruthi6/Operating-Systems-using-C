#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>  
#define MAX_PORTS 5
sem_t port_semaphore;  
void* open_port(void* port) {
    int port_number = *((int*)port);
    free(port); 
    printf("Attempting to open port %d\n", port_number);
    sem_wait(&port_semaphore);  
    
    printf("Port %d is opened\n", port_number);
    sleep(2);  
    
    printf("Port %d is closed\n", port_number);
    sem_post(&port_semaphore);  
    
    pthread_exit(NULL);
}

int main() {
    pthread_t threads[MAX_PORTS];
    sem_init(&port_semaphore, 0, 1);  

    for (int i = 0; i < MAX_PORTS; i++) {
        int* port_number = malloc(sizeof(int));  
        *port_number = i + 1;

        if (pthread_create(&threads[i], NULL, open_port, port_number) != 0) {
            perror("Failed to create thread");
            exit(1);
        }
    }

    for (int i = 0; i < MAX_PORTS; i++) {
        pthread_join(threads[i], NULL);
    }

    sem_destroy(&port_semaphore);  

    return 0;
}
